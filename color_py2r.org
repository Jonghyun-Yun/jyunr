#+title: Color_py2r

#+property: header-args :eval never-export
#+property: header-args:python :session :exports both :results output :noweb yes :eval never-export
#+property: header-args:jupyter-python :session *jupyter-python* :kernel tf
#+property: header-args:R ::session "*R-Org*"

#+begin_src jupyter-python :tangle py/rgb2hex.py
import matplotlib.pyplot as plt
from matplotlib import colors

def rgb2hex(cname):
  cmap=plt.get_cmap(cname)
  out = []
  for cc in cmap.colors:
      out.append(colors.rgb2hex(cc))
  return out
#+end_src

#+RESULTS:

#+begin_src jupyter-python
rgb2hex('tab20b')
#+end_src

#+RESULTS:
| #393b79 | #5254a3 | #6b6ecf | #9c9ede | #637939 | #8ca252 | #b5cf6b | #cedb9c | #8c6d31 | #bd9e39 | #e7ba52 | #e7cb94 | #843c39 | #ad494a | #d6616b | #e7969c | #7b4173 | #a55194 | #ce6dbd | #de9ed6 |

#+begin_src R
library(reticulate)
conda_python("tf")
source_python("py/rgb2hex.py")

paste0("c('",paste(rgb2hex('tab20c'), collapse = "', '"), "')")
#+end_src

#+begin_src R :tangle R/color.R
plt_palette = c('#3182bd', '#6baed6', '#9ecae1', '#c6dbef', '#e6550d', '#fd8d3c', '#fdae6b', '#fdd0a2', '#31a354', '#74c476', '#a1d99b', '#c7e9c0', '#756bb1', '#9e9ac8', '#bcbddc', '#dadaeb', '#636363', '#969696', '#bdbdbd', '#d9d9d9')

plt_pal <- function() {
  scales::manual_pal(plt_palette)
}

scale_color_plt <- function(...) { ggplot2::discrete_scale("color", "plt", plt_pal(), ...) }
scale_colour_plt <- scale_color_plt

scale_fill_plt <- function(...) { ggplot2::discrete_scale("fill", "plt", plt_pal(), ...) }
#+end_src

# Local Variables:
# eval: (rainbow-mode 1)
# End:
